/**
什么时单例模式：
1.所谓类的单例设计模式，就是采用一定的方法保证整个软件系统中，对某个类只存在一个对象实例，并且该类值只提供一个取得其对象的实例方法。
单例设计模式的两种 方式：
1.饿汉式
步骤如下：
    1.构造器私有化
    2.类的内部创建对象
    3.向外暴露一个静态的公共方法
    4.代码实现
2.懒汉式
    1.构造器私有化
    2.定义一个static静态属性对象
    3.提供一个public的static方法，可以返回一个cat对象
    4.懒汉式，只有当用户使用getInstanc时，才返回cat对象，而再次掉用时，会返回上次创建的Cat对象从而确保了单例

 小结：
       1.二者最主要的区别在于创建对象的时机不同，饿汉式实在类加载的时候就创建了对象实例，而懒汉式式在使用时才创建
       2.饿汉式不存在线程安全问题，懒汉式存在线程安全问题
       3.饿汉式存在浪费资源的可能，因为如果程序员一个对象实例都没有使用，那么饿汉式创建的对象就浪费了，懒汉式是使用的时候才创建，不存在这个问题
       4.在我们JavaSe标准类中，java.lang.Runtime就是经典的单例模式
       
*/